stages:
  - build
  - deploy

build:
  stage: build
  image: "node:16.19-alpine3.16"
  tags:
    - docker
  script:
    - npm ci
    - npm run build
  artifacts:
    paths:
      - build/
    expire_in: 30 days

deploy_dev:
  stage: deploy
  image: "alpine:3.17.2"
  variables:
    PUBLIC_DIR: /home/rb/basket/moscowtravelhub2020/var/public/showmoscow/apply/
  tags:
    - docker
  script:
    - export HOST=$(echo $RB_DEV_SERVER | cut -d' ' -f1)
    - export PORT=$(echo $RB_DEV_SERVER | cut -d' ' -f3)
    - apk --no-cache add openssh-client rsync
    - echo 'StrictHostKeyChecking no' > /etc/ssh/ssh_config
    - eval $(ssh-agent -s)
    - echo "${RB_DEV_SERVER_KEY}" | tr -d '\r' | ssh-add - > /dev/null
    - rsync -e "ssh -p $PORT" -a build/* "${HOST}:${PUBLIC_DIR}/."
  when: manual

deploy_prod:
  stage: deploy
  image: "alpine:3.17.2"
  variables:
    PUBLIC_DIR: /home/worker/basket/moscowtravelhub2020/var/public/showmoscow/apply/
  tags:
    - docker
  script:
    - apk --no-cache add openssh-client rsync
    - echo 'StrictHostKeyChecking no' > /etc/ssh/ssh_config
    - eval $(ssh-agent -s)
    - echo "${TIMWEB_TOURIST_PROD_SERVER_KEY}" | tr -d '\r' | ssh-add - > /dev/null
    - rsync -a build/* "${TIMWEB_TOURIST_PROD_SERVER}:${PUBLIC_DIR}/."
  only:
    - master
